def move_forward(step_count=5, step_time=0.5, step_length=15, step_height=30):
    """Исправленная версия движения ВПЕРЕД"""
    # Инициализация и начальная поза
    Stay()
    time.sleep(1)
    
    # Константы для движения
    neutral_angle = 90
    half_step_time = step_time / 2
    
    for step in range(step_count):
        print(f"Шаг {step + 1}/{step_count}")
        
        # Разбиваем шаг на 10 промежутков для плавности
        for i in range(10):
            t = i * 0.1 * step_time
            phase = (t % step_time) < half_step_time
            
            # Нормализованное время для текущей фазы [0..1]
            t_norm = (t % half_step_time) / half_step_time
            
            # Вычисляем высоту по параболе (плавный подъем/спуск)
            current_height = 4 * step_height * t_norm * (1 - t_norm)
            
            # Фаза 1: FR и BL ноги двигаются
            if phase:
                # Передняя правая нога (FR) - ИЗМЕНИЛИ ЗНАК НА МИНУС
                clav_angle = neutral_angle - step_length * (2*t_norm - 1)  # <--- Здесь исправление
                hum_angle = 60 - current_height
                Front_Right_clauiculum(clav_angle)
                Front_Right_humerus(hum_angle)
                
                # Задняя левая нога (BL) - ИЗМЕНИЛИ ЗНАК НА МИНУС
                clav_angle = neutral_angle - step_length * (2*t_norm - 1)  # <--- Здесь исправление
                hum_angle = 60 - current_height
                Back_Left_clauiculum(clav_angle)
                Back_Left_humerus(hum_angle)
                
                # Остальные ноги в опорной позиции
                Front_Left_clauiculum(neutral_angle)
                Front_Left_humerus(60)
                Back_Right_clauiculum(neutral_angle)
                Back_Right_humerus(60)
            
            # Фаза 2: FL и BR ноги двигаются
            else:
                # Передняя левая нога (FL) - ИЗМЕНИЛИ ЗНАК НА МИНУС
                clav_angle = neutral_angle - step_length * (2*t_norm - 1)  # <--- Здесь исправление
                hum_angle = 60 - current_height
                Front_Left_clauiculum(clav_angle)
                Front_Left_humerus(hum_angle)
                
                # Задняя правая нога (BR) - ИЗМЕНИЛИ ЗНАК НА МИНУС
                clav_angle = neutral_angle - step_length * (2*t_norm - 1)  # <--- Здесь исправление
                hum_angle = 60 - current_height
                Back_Right_clauiculum(clav_angle)
                Back_Right_humerus(hum_angle)
                
                # Остальные ноги в опорной позиции
                Front_Right_clauiculum(neutral_angle)
                Front_Right_humerus(60)
                Back_Left_clauiculum(neutral_angle)
                Back_Left_humerus(60)
            
            time.sleep(step_time / 10)
    
    Stay()

# Пример вызова
if __name__ == "__main__":
    try:
        move_forward(step_count=8, step_time=0.8, step_length=12, step_height=25)
    except KeyboardInterrupt:
        Stay()






#------------------------------------------------------------------------------------------------------------------#

def move_forward(step_count=5, step_time=0.5, step_length=15, step_height=30):
    """Улучшенное движение вперед с использованием троттинга и плавных траекторий"""
    # Инициализация и начальная поза
    Stay()
    time.sleep(1)
    
    # Константы для движения
    neutral_angle = 90
    half_step_time = step_time / 2
    
    for step in range(step_count):
        print(f"Шаг {step + 1}/{step_count}")
        
        # Разбиваем шаг на 10 промежутков для плавности
        for i in range(10):
            t = i * 0.1 * step_time
            phase = (t % step_time) < half_step_time
            
            # Нормализованное время для текущей фазы [0..1]
            t_norm = (t % half_step_time) / half_step_time
            
            # Вычисляем высоту по параболе (плавный подъем/спуск)
            current_height = 4 * step_height * t_norm * (1 - t_norm)
            
            # Фаза 1: FR и BL ноги двигаются
            if phase:
                # Передняя правая нога (FR)
                clav_angle = neutral_angle + step_length * (2*t_norm - 1)
                hum_angle = 60 - current_height
                Front_Right_clauiculum(clav_angle)
                Front_Right_humerus(hum_angle)
                
                # Задняя левая нога (BL)
                clav_angle = neutral_angle + step_length * (2*t_norm - 1)
                hum_angle = 60 - current_height
                Back_Left_clauiculum(clav_angle)
                Back_Left_humerus(hum_angle)
                
                # Остальные ноги в опорной позиции
                Front_Left_clauiculum(neutral_angle)
                Front_Left_humerus(60)
                Back_Right_clauiculum(neutral_angle)
                Back_Right_humerus(60)
            
            # Фаза 2: FL и BR ноги двигаются
            else:
                # Передняя левая нога (FL)
                clav_angle = neutral_angle + step_length * (2*t_norm - 1)
                hum_angle = 60 - current_height
                Front_Left_clauiculum(clav_angle)
                Front_Left_humerus(hum_angle)
                
                # Задняя правая нога (BR)
                clav_angle = neutral_angle + step_length * (2*t_norm - 1)
                hum_angle = 60 - current_height
                Back_Right_clauiculum(clav_angle)
                Back_Right_humerus(hum_angle)
                
                # Остальные ноги в опорной позиции
                Front_Right_clauiculum(neutral_angle)
                Front_Right_humerus(60)
                Back_Left_clauiculum(neutral_angle)
                Back_Left_humerus(60)
            
            time.sleep(step_time / 10)  # Плавный интервал
    
    # Возврат в начальную позу
    Stay()

# Пример использования с параметрами по умолчанию
if __name__ == "__main__":
    try:
        # Более медленный и плавный вариант
        move_forward(step_count=8, step_time=0.8, step_length=12, step_height=25)
        
        # Более быстрый вариант
        # move_forward(step_count=10, step_time=0.4, step_length=18, step_height=20)
    except KeyboardInterrupt:
        print("Прервано пользователем")
        Stay()
